html {
  font-size: 14px;
}

@media (min-width: 768px) {
  html {
    font-size: 16px;
  }
}

.btn:focus, .btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
  box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}

html {
  position: relative;
  min-height: 100%;
}

body.light-mode .footer {
  background-color: #b7bec9;
}

body.dark-mode .footer {
  background-color: #242424;
}


body.light-mode .navbar {
  box-shadow: 0px 10px 30px 5px #9b9b9b;
}

body.dark-mode .navbar {
  box-shadow: 0px 10px 30px 5px #242424;
}


body {
  margin-bottom: 60px;
}

body.dark-mode {
  background-color: #343a40;
  color: #fff;
}

body.dark-mode a {
  color: #007bff;
}

body.dark-mode .btn-primary {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

body.dark-mode .nav-pills .nav-link.active, body.dark-mode .nav-pills .show > .nav-link {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

body.dark-mode .table {
  color: #fff; /* White text for dark mode */
}

body.dark-mode .table th, body.dark-mode .table td {
  color: #fff; /* Ensure table headers and data are white in dark mode */
}

body.dark-mode option { 
  background-color: #012345;
  color: white;
}

body.light-mode {
  background-color: #fff;
  color: #495057;
}

body.light-mode a {
  color: #007bff;
}

body.light-mode .btn-primary {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

body.light-mode .nav-pills .nav-link.active, body.light-mode .nav-pills .show > .nav-link {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

body.light-mode .table {
  color: #111; /* White text for dark mode */
}

body.light-mode .table th, body.light-mode .table td {
  color: #111; /* Ensure table headers and data are white in dark mode */
}

body.hidden {
  visibility: hidden;
}

body.light-mode .slideshow-container {
  background-color: white;
  color: black;
}

body.dark-mode .slideshow-container {
  background-color: black;
  color: white;
}

/* Slideshow container */
/* Container for the slideshow */
.slideshow-container {
  position: absolute;
  left: 0px;
  top: 124px;
  width: 100%;
  height: calc(100vh - 124px);
  overflow: hidden;
  background-color: black; /* Optional, to ensure a fallback background */
}

/* Styling for each slide */
.mySlides {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 1.5s ease-in-out;
}

.mySlides.active {
  opacity: 1;
  z-index: 1;
}

/* The overlay */
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5); /* Black overlay with 50% opacity */
  z-index: 1; /* Ensure it sits above the image but below the text */
}

/* The image */
.slide-image {
  display: block;
  width: 100%; /* Ensures it scales to the container */
  height: 100%; /* Keeps the height consistent with the container */
  object-fit: cover; /* Prevents distortion and ensures proper aspect ratio */
  z-index: 0; /* Behind the overlay */
}

/* Text over the slide */
.text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #f2f2f2;
  font-size: 1.5rem;
  text-align: center;
  z-index: 2; /* Above the overlay */
}

/* Adjust text size for smaller screens */
@media only screen and (max-width: 300px) {
  .text {
      font-size: 1rem;
  }
}

/* For light mode */
body.light-mode .slideshow-container {
  background-color: white;
  color: black;
}

/* For dark mode */
body.dark-mode .slideshow-container {
  background-color: black;
  color: white;
}

/* Transition animations for the slideshow */
.fade {
  animation-name: fade;
  animation-duration: 1.5s;
}

@keyframes fade {
  from {
      opacity: 0.4;
  }
  to {
      opacity: 1;
  }
}

/* Center the welcome box */
.welcome-box {
  position: absolute; /* Position it relative to the page */
  top: 40%; /* 50% from the top */
  left: 50%; /* 50% from the left */
  transform: translate(-50%, -50%); /* Center it exactly by moving it up and left by 50% of its own size */
  background-color: rgba(255, 255, 255, 0.5); /* Semi-transparent white background */
  border-radius: 15px; /* Rounded corners */
  padding: 30px;
  color: black; /* Text color */
  z-index: 10; /* Ensure it appears above the slideshow */
  width: 80%; /* Adjust width as needed */
  max-width: 500px; /* Optional max-width */
  text-align: center; /* Center the text inside */
}

.buttons-row {
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}


.scroll-indicator {
  position: absolute; /* Or 'fixed' if you want it to remain in place when scrolling */
  bottom: 20px; /* Adjust the position from the bottom */
  left: 50%;
  transform: translateX(-50%); /* Center it horizontally */
  width: 50px; /* Adjust size as needed */
  height: auto; /* Maintain aspect ratio */
  z-index: 10; /* Ensure it appears above all other layers */
  pointer-events: none; /* Prevent interactions from blocking other elements */
}

.blocks-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  border: 1px solid #ccc;
  padding: 10px;
}

.block {
  width: 150px;
  height: 100px;
  background-color: #f8f9fa;
  border: 1px solid #ddd;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: grab;
}

.block-header {
  font-weight: bold;
  background-color: #2f2e6e;
  color: white;
  border-radius: 10px;
  width: 100%;
  text-align: center;
  padding: 5px;
}

#blocksContainer {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

body.dark-mode .block-item {
  padding: 10px;
  border-radius: 10px;
  background-color: #525252;
  box-shadow: 15px 15px 30px 5px #242424;
}

body.light-mode .block-item {
  padding: 10px;
  border-radius: 10px;
  background-color: #ededed;
  box-shadow: 15px 15px 30px 5px #616161;
}

.block-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.block-actions a {
  color: white;
  margin-right: 10px;
}

.block-content {
  padding: 10px;
  flex-wrap: wrap;
  gap: 10px;
}

body.light-mode .block-item-content {
  background-color: #fff;
  border: 1px solid #d1d1d1;
  border-radius: 5px;
  padding: 5px;
  display: inline-block;
}

body.dark-mode .block-item-content {
  background-color: #343a40;
  border: 1px solid #343a40;
  border-radius: 5px;
  padding: 5px;
  display: inline-block;
}

#user-input-display {
  display: inline-block;
  margin-top: 15px;
  position: relative;
  width: 100%;
  overflow-wrap: break-word;
}

body.light-mode .block-content p {
  color: black;
  margin: 5px 0;
}

body.dark-mode .bloc-content p {
  color: white;
  margin: 5px 0;
}

.block-content ul {
  padding-left: 20px;
}

/* General Card Container */
.card-container {
  position: relative;
  z-index: 0; /* Establish stacking context */
}

/* General Card Styling */
.card {
  display: flex; /* Flexbox layout to position elements */
  flex-direction: row; /* Arrange items horizontally */
  align-items: center; /* Align items vertically */
  background-color: #2f2e6e; /* Main card background color */
  color: white; /* Text color */
  border: 1px solid #ddd; /* Light border */
  border-radius: 10px; /* Rounded corners */
  overflow: hidden; /* Prevent overflow */
  transition: all 0.3s ease; /* Smooth transition for hover effects */
  width: 100%; /* Full width */
  height: 100px; /* Initial height of the card */
  position: relative;
  z-index: 1; /* Default stacking level */
}

/* Add Shadow on Hover */
.expand-on-hover:hover {
  transform: scale(1.01); /* Slight scaling on hover */
  z-index: 10; /* Bring the card above others */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* Add a shadow to the hovered card */
}

/* Description Styling */
.card-description {
  display: none; /* Hidden by default */
  text-align: center;
  background-color: #444444; /* Background color for the description */
  color: white; /* Text color for the description */
  padding: 10px;
  width: 200px; /* Fixed width for the description box */
  flex-shrink: 0; /* Prevent shrinking */
  border-left: 3px solid #ffffff; /* Separator line */
  height: 100%; /* Match the card's height */
  transition: all 0.3s ease; /* Smooth appearance */
  font-size: 14px;
}

/* Ensure Other Cards Stay Below */
.card-container:hover ~ .card-container {
  z-index: 0; /* Ensure non-hovered cards stay in the background */
}

/* Show Description on Hover */
.expand-on-hover:hover .card-description {
  display: block; /* Reveal the description on hover */
}

/* Card Image Styling */
.card img {
  width: auto; /* Ensure the image scales correctly */
  height: 100px; /* Set a fixed height for the image */
  object-fit: cover; /* Maintain aspect ratio while filling the image area */
  border-radius: 10px 0 0 10px; /* Rounded corners for consistency */
  margin-right: 10px; /* Add space between the image and the description */
}

/* Ensuring Image is Resized Correctly */
.card-body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: calc(100% - 110px); /* Ensure the description fills the rest of the card */
  padding: 10px;
}

.card-body .card-title {
  font-size: 16px;
  margin-bottom: 5px;
}


.create-block-container {
  display: flex;
  margin-top: 50px;
  align-items: stretch; /* Ensures all children stretch to the same height */
  gap: 20px; /* Adds space between the two divs */
  height: auto; /* Allow the container height to adjust based on content */
}

.block-input-boxes, .block-element-grabber {
  position: relative;
  padding: 20px;
  background-color: #2f2e6e;
  border-radius: 15px;
  flex-grow: 1; /* Ensures both boxes expand to take equal space */
  display: flex;
  align-items: center;
  flex-direction: column; /* Ensures the content inside is stacked vertically */
  color: white;
}

.block-input-boxes {
  width: 800px; /* Fixed width */
}

.template-input-boxes{
  position: relative;
  padding: 20px;
  background-color: #2f2e6e;
  border-radius: 15px;
  flex-grow: 1; /* Ensures both boxes expand to take equal space */
  display: flex;
  align-items: center;
  flex-direction: column; /* Ensures the content inside is stacked vertically */
  color: white;
  width: 600px;
}

.block-element-grabber {
  width: 500px; /* Fixed width */
}

.block-input-boxes h1, .block-element-grabber h1 .template-input-boxes h1{
  text-decoration: underline;
}

.form-group {
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  width: 100%; 
}

.row {
  display: flex;
  justify-content: center; 
  width: 100%;
}

.ElementInput, .ElementOutput {
  border-radius: 20px;
  width: 350px; /* Set a fixed width (adjust as needed) */
  max-width: 350px; /* Ensures the width cannot exceed the set value */
  min-width: 350px; /* Prevents the width from shrinking */
  resize: none; /* Prevent resizing (only applies to textareas) */
  box-sizing: border-box; /* Ensures padding and borders don't affect the width */
  height: 125px;
}

.converter-buttons {
  display: flex; /* Change to flex to align buttons horizontally */
  justify-content: center; /* Center the buttons horizontally */
  gap: 10px; /* Add some space between buttons */
}

.btn-circle {
  width: 50px; /* Set the width and height to make it circular */
  height: 50px;
  border-radius: 50%; /* This makes it circular */
  background-color: #007bff; /* Blue background (Bootstrap primary color) */
  color: white; /* White text */
  border: none; /* Remove border */
  text-align: center; /* Center the text */
  font-size: 14px; /* Adjust font size */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer; /* Add pointer cursor */
}

.converter-container {
  position: relative;
  height: 100%; /* Ensure it fills the remaining height of the parent container */
}

.dropdown-container {
  display: flex; 
  justify-content: space-between; 
  align-items: center; 
  width: 100%; 
  margin: auto; 
  gap: 20px;
}

@keyframes rotate {

  0% { transform: rotate(0deg); }

  50% { transform: rotate(180deg); }

  100% { transform: rotate(180deg); }

}

.status-icon-sandtimer {

  display: inline-block;

  animation: rotate 2s linear infinite;

}
